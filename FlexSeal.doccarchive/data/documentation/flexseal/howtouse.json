{"primaryContentSections":[{"kind":"content","content":[{"anchor":"Setting-up-your-classes-for-the-tooling","level":2,"type":"heading","text":"Setting up your classes for the tooling"},{"anchor":"1-Conform-to-FlexSealTrackable","level":3,"type":"heading","text":"1. Conform to FlexSealTrackable"},{"type":"paragraph","inlineContent":[{"type":"text","text":"To be tracked by our tool, a class simply has to conform to "},{"type":"reference","isActive":true,"identifier":"doc:\/\/FlexSeal\/documentation\/FlexSeal\/FlexSealTrackable"},{"type":"text","text":" (an empty conformance really, just"},{"type":"text","text":" "},{"type":"text","text":"to provide a default implementation + type abstraction)."}]},{"anchor":"2-Call-track-in-the-class-init","level":3,"type":"heading","text":"2. Call track(…) in the class’ init"},{"type":"paragraph","inlineContent":[{"type":"text","text":"Then, in its init, just call the "},{"type":"reference","isActive":true,"identifier":"doc:\/\/FlexSeal\/documentation\/FlexSeal\/FlexSealTrackable\/track(initialConfig:)"},{"type":"text","text":" method provided by the protocol. Give the"},{"type":"text","text":" "},{"type":"text","text":"config a unique name for the class! Can be whatever you like, so long as it’s unique. This is the name that will display"},{"type":"text","text":" "},{"type":"text","text":"in the tooling once it’s up and running. For example:"}]},{"type":"codeListing","syntax":"swift","code":["\/\/ marking as DEBUG only to show you can prevent at least the invocations from appearing in your release binaries","#if DEBUG","\/\/ here, flexSealName is just defined elsewhere","track(initialConfig: FlexSealTrackedClass(name: Self.flexSealName, initialMaxAllowed: 3))","#endif"]},{"anchor":"3-optional-Changing-the-max-count","level":3,"type":"heading","text":"3. (optional) Changing the max count"},{"type":"paragraph","inlineContent":[{"type":"text","text":"Changing the max count allowed is possible at any point during run time, simply by calling the static method"},{"type":"text","text":" "},{"type":"reference","isActive":true,"identifier":"doc:\/\/FlexSeal\/documentation\/FlexSeal\/FlexSeal\/changeMaxCount(_:for:)"},{"type":"text","text":". This lets you set up the tool in a way that respects"},{"type":"text","text":" "},{"type":"text","text":"your app’s user flows, to help both yourself as a dev and whoever is testing your work (which could also be you,"},{"type":"text","text":" "},{"type":"text","text":"ya indie dev)."}]},{"anchor":"4-Add-a-way-to-turn-the-tool-onoff","level":3,"type":"heading","text":"4. Add a way to turn the tool on\/off"},{"type":"paragraph","inlineContent":[{"type":"text","text":"Add a way for your app to show (or, ideally, toggle) this tool. See the sample app for a messy example involving the"},{"type":"text","text":" "},{"type":"text","text":"device shake gesture. Essentially, you’ll at minimum want to call "},{"type":"reference","isActive":true,"identifier":"doc:\/\/FlexSeal\/documentation\/FlexSeal\/FlexSeal\/start(in:)"},{"type":"text","text":", and for toggle"},{"type":"text","text":" "},{"type":"text","text":"functionality, call "},{"type":"reference","isActive":true,"identifier":"doc:\/\/FlexSeal\/documentation\/FlexSeal\/FlexSeal\/hide()"},{"type":"text","text":" as well. "},{"type":"reference","isActive":true,"identifier":"doc:\/\/FlexSeal\/documentation\/FlexSeal\/FlexSeal\/isFlexSealVisible"},{"type":"text","text":" lets you keep any custom interface you"},{"type":"text","text":" "},{"type":"text","text":"may have added up-to-date with dismissals that were done via the means provided by FlexSeal itself (double tapping on the"},{"type":"text","text":" "},{"type":"text","text":"HUD)."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"Support for a "},{"type":"codeVoice","code":"clear()"},{"type":"text","text":" method that properly goes and deallocates"},{"type":"text","text":" "},{"type":"text","text":"all the tool’s objects without causing any leaks of its own is in-progress. As a debug-only tool, this toggle functionality"},{"type":"text","text":" "},{"type":"text","text":"should hopefully suffice in the meantime."}]},{"anchor":"How-are-the-addresses-helpful","level":2,"type":"heading","text":"How are the addresses helpful?"},{"type":"paragraph","inlineContent":[{"type":"text","text":"The addresses can be super-handy in tracing references when you factor in the Memory Graph tool that Xcode provides. You can"},{"type":"text","text":" "},{"type":"text","text":"find the full graph of references to the specific instance of the class you’re tracking. I’ll try and write up an article"},{"type":"text","text":" "},{"type":"text","text":"on my site for an example use case, and will link to it here once it’s up, but we did manage to use this in a previous job"},{"type":"text","text":" "},{"type":"text","text":"to pinpoint leaks reported in production."}]},{"anchor":"One-last-thing","level":2,"type":"heading","text":"One last thing"},{"type":"paragraph","inlineContent":[{"type":"text","text":"While it is handy and (hopefully) fairly lightweight to track classes in this manner, it’s probably not ideal to go"},{"type":"text","text":" "},{"type":"text","text":"overboard and add tracking to a ton of classes at the same time. In future iterations, we (the royal we) can probably enrich this"},{"type":"text","text":" "},{"type":"text","text":"tooling by adding in-app options to track certain classes, but for now just don’t go on a tracking spree. It should be safe,"},{"type":"text","text":" "},{"type":"text","text":"but may affect your debug build’s performance (and the performance for others, if you merge that tracking into development)."}]}]}],"schemaVersion":{"major":0,"minor":3,"patch":0},"sections":[],"variants":[{"paths":["\/documentation\/flexseal\/howtouse"],"traits":[{"interfaceLanguage":"swift"}]}],"identifier":{"url":"doc:\/\/FlexSeal\/documentation\/FlexSeal\/HowToUse","interfaceLanguage":"swift"},"kind":"article","metadata":{"roleHeading":"Article","title":"How to use","role":"article","modules":[{"name":"FlexSeal"}]},"hierarchy":{"paths":[["doc:\/\/FlexSeal\/documentation\/FlexSeal"]]},"references":{"doc://FlexSeal/documentation/FlexSeal/FlexSeal/start(in:)":{"role":"symbol","title":"start(in:)","fragments":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"start"},{"kind":"text","text":"("},{"kind":"externalParam","text":"in"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"UIWindowScene","preciseIdentifier":"c:objc(cs)UIWindowScene"},{"kind":"text","text":")"}],"abstract":[{"type":"emphasis","inlineContent":[{"type":"text","text":"Do you really need documentation for this?"}]},{"type":"text","text":" – er, I mean, starts up the FlexSeal window in the given scene. Will"},{"type":"text","text":" "},{"type":"text","text":"resume a previously stopped session if one exists."}],"identifier":"doc:\/\/FlexSeal\/documentation\/FlexSeal\/FlexSeal\/start(in:)","kind":"symbol","type":"topic","url":"\/documentation\/flexseal\/flexseal\/start(in:)"},"doc://FlexSeal/documentation/FlexSeal/FlexSealTrackable":{"role":"symbol","title":"FlexSealTrackable","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"FlexSealTrackable"}],"abstract":[{"type":"text","text":"Provides lifecycle tracking functionality to any class that conforms to it, viewable via our internal"},{"type":"text","text":" "},{"type":"text","text":"debug tool."}],"identifier":"doc:\/\/FlexSeal\/documentation\/FlexSeal\/FlexSealTrackable","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"FlexSealTrackable"}],"url":"\/documentation\/flexseal\/flexsealtrackable"},"doc://FlexSeal/documentation/FlexSeal/FlexSeal/isFlexSealVisible":{"role":"symbol","title":"isFlexSealVisible","fragments":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"isFlexSealVisible"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Bool","preciseIdentifier":"s:Sb"}],"abstract":[{"type":"text","text":"Whether or not the tool is currently visible (created since you can dismiss the tool through its own code, so this"},{"type":"text","text":" "},{"type":"text","text":"lets you update your own custom toggles\/buttons\/etc. properly)."}],"identifier":"doc:\/\/FlexSeal\/documentation\/FlexSeal\/FlexSeal\/isFlexSealVisible","kind":"symbol","type":"topic","url":"\/documentation\/flexseal\/flexseal\/isflexsealvisible"},"doc://FlexSeal/documentation/FlexSeal/FlexSealTrackable/track(initialConfig:)":{"role":"symbol","title":"track(initialConfig:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"track"},{"kind":"text","text":"("},{"kind":"externalParam","text":"initialConfig"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"FlexSealTrackedClass","preciseIdentifier":"s:8FlexSeal0aB12TrackedClassC"},{"kind":"text","text":")"}],"abstract":[{"type":"text","text":"Just call this in the conforming entity’s initializer and it’ll be tracked!"}],"identifier":"doc:\/\/FlexSeal\/documentation\/FlexSeal\/FlexSealTrackable\/track(initialConfig:)","kind":"symbol","type":"topic","url":"\/documentation\/flexseal\/flexsealtrackable\/track(initialconfig:)"},"doc://FlexSeal/documentation/FlexSeal/FlexSeal/hide()":{"role":"symbol","title":"hide()","fragments":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"hide"},{"kind":"text","text":"()"}],"abstract":[{"type":"text","text":"Hides the FlexSeal window without deallocating the backing data source, letting you make the same session visible"},{"type":"text","text":" "},{"type":"text","text":"at any point."}],"identifier":"doc:\/\/FlexSeal\/documentation\/FlexSeal\/FlexSeal\/hide()","kind":"symbol","type":"topic","url":"\/documentation\/flexseal\/flexseal\/hide()"},"doc://FlexSeal/documentation/FlexSeal/FlexSeal/changeMaxCount(_:for:)":{"role":"symbol","title":"changeMaxCount(_:for:)","fragments":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"changeMaxCount"},{"kind":"text","text":"("},{"kind":"typeIdentifier","text":"Int","preciseIdentifier":"s:Si"},{"kind":"text","text":", "},{"kind":"externalParam","text":"for"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"String","preciseIdentifier":"s:SS"},{"kind":"text","text":")"}],"abstract":[{"type":"text","text":"Alter the max count of an entity for which you had already started tracking at least once prior."}],"identifier":"doc:\/\/FlexSeal\/documentation\/FlexSeal\/FlexSeal\/changeMaxCount(_:for:)","kind":"symbol","type":"topic","url":"\/documentation\/flexseal\/flexseal\/changemaxcount(_:for:)"},"doc://FlexSeal/documentation/FlexSeal":{"role":"collection","title":"FlexSeal","abstract":[{"type":"text","text":"A lifecycle tracking tool to find potential memory leaks during development and testing. Copyright infringement not intended (but you’re a real one if you get the reference)."}],"identifier":"doc:\/\/FlexSeal\/documentation\/FlexSeal","kind":"symbol","type":"topic","url":"\/documentation\/flexseal"}}}